// Generated by CoffeeScript 1.9.0
(function() {
  var AsyncPool, Promise, StubAdapter, StubClient, logger;

  Promise = require('bluebird');

  AsyncPool = require('async-pool');

  logger = (require('logger-facade-nodejs')).getLogger('xwrap');

  exports.initialize = function(settings) {
    return new StubAdapter(settings);
  };

  StubAdapter = (function() {
    function StubAdapter(settings) {
      this.settings = settings;
      this.pool = new AsyncPool([new StubClient('A'), new StubClient('B')]);
    }

    StubAdapter.prototype.query = function(text) {
      return Promise.using(this.xtransaction.client(), function(client) {
        return client.query(text);
      });
    };

    StubAdapter.prototype.getClient = function() {
      return this.pool.use();
    };

    StubAdapter.prototype.enableTransactions = function() {
      return this.transactionsEnabled = true;
    };

    StubAdapter.prototype.disableTransactions = function() {
      return this.transactionsEnabled = false;
    };

    StubAdapter.prototype.openTransaction = function(client) {
      return client.query('begin');
    };

    StubAdapter.prototype.openSubTransaction = function(client, name) {
      return client.query("savepoint \"" + name + "\"");
    };

    StubAdapter.prototype.commitTransaction = function(client) {
      return client.query("commit");
    };

    StubAdapter.prototype.commitSubTransaction = function(client, name) {
      return client.query("release \"" + name + "\"");
    };

    StubAdapter.prototype.rollbackTransaction = function(client) {
      return client.query("rollback");
    };

    StubAdapter.prototype.rollbackSubTransaction = function(client, name) {
      return client.query("rollback to \"" + name + "\"");
    };

    return StubAdapter;

  })();

  StubClient = (function() {
    function StubClient(name) {
      this.name = name;
    }

    StubClient.prototype.query = function(text) {
      logger.trace("query client " + this.name + ": " + text);
      return new Promise(function(res) {
        return setTimeout(function() {
          return res();
        }, 1);
      });
    };

    return StubClient;

  })();

}).call(this);
